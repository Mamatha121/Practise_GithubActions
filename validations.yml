name: Validations

on:
  workflow_dispatch

jobs:
  Validations:
    runs-on: ubuntu-latest
    uses: actions/github-script@v6.0.0
    steps:
      - name : Validate Repositories
          with:
            github-token: ${{secrets.AUDIT_TOKEN}}
            scripts: |
              let allRepos = await github.request("GET /orgs/northerntrust-internal/repos",
                  params = { types: 'all', per_page = 100 })
              let reposRightName = []
              let reposWrongName = []
              # let reposWithTeam = []
              # let reposWithoutTeam = []
              console.log(`Total number of Repos : ${allRepos.data.length()}`)
              
              # async function validateTeamAccess(repoData) {
              #     let teamAccess = await github.request(`GET /repos/northerntrust-internal/${repoData.name}`,
              #         params = {
              #             per_page: 100
              #         })
              #     if (teamAccess.data.length >= 1) { return True }
              #     else { return False }
              # }

              allRepos.data.forEach((repoItem) => {
                  if ((repoItem.name.startsWith("actions-")) || (/^apm\d{7}-[a-zA-Z]{3}-/.test(repoItem.name)){
                      reposRightName.push(repoItem.name)
                  } else {
                      reposWrongName.push(repoItem.name)
                  }
                  # if (await validateTeamAccess(repoItem)){
                  #     reposWithTeam.push(repoItem.name)
                  # } else { reposWithoutTeam.push(repoItem.name) }
              })
                
              console.log(`Repos following naming convention : ${reposRightName}`)
              console.log(`Repos not following naming convention : ${reposWrongName}`)
              # console.log(`Repos with team access : ${reposWithTeam}`)
              # console.log(`Repos without team access : ${reposWithoutTeam}`) 
      
      - name : Validate Teams
          with:
            github-token: ${{secrets.AUDIT_TOKEN}}
            scripts: |
              let teamList = await github.paginate(github.rest.teams.list,
                  { org: context.payload.organization.login },
                  (resp) => resp.data.map((teamItem) => ({
                      "name": teamItem.name,
                      "slug": teamItem.slug,
                      "id": teamItem.id,
                      "parent": {
                          "name": teamItem.parent.name,
                          "slug": teamItem.parent.slug,
                          "id": teamItem.parent.id
                      }
                  }))
              )

              let teamsCorrect = []
              let teamsIncorrect = []
              async function getIDPMapping(slug) {
                  let idpResp = await github.request(`GET /orgs/northerntrust-internal/teams/${slug}/external-groups`)
                  if (idpResp.data.groups.length >= 1) {
                      let groups = idpResp.data.groups[0]
                      return groups.group_name
                  }
                  else { return null }
              }
              console.dir(teamList)
              let suffixes = ["-Admin", "-Maintain", "-Read", "-Triage", "-Write"]
              teamList.forEach((teamItem) => {
                  if (suffixes.some(child => teamItem.slug.endsWith(child))) {
                      let teamName = teamItem.split("-")[0]
                      let teamChild = teamItem.split("-")[1]
                      let idpMapping = await getIDPMapping(teamItem.slug)

                      if ((teamItem.parent.slug === teamName) & idpMapping.endsWith(`-${teamName}-${teamChild}`)) {
                          teamsCorrect.push(teamItem)
                      } else {
                          teamsIncorrect.push(teamItem)
                      }

                  } else {
                      let idpMapping = await getIDPMapping(teamItem.slug)
                      if ((teamItem.parent = null) & (idpMapping = null)) {
                          teamsCorrect.push(teamItem)
                      } else { teamsIncorrect.push(teamItem) }
                  }

              })
              console.log("Teams following the convention :")
              console.dir(teamsCorrect)
              console.log("Teams not following convention :")
              console.dir(teamsIncorrect)
